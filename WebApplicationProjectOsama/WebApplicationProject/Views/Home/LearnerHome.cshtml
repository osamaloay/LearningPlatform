@model WebApplicationProject.Models.Learner

@{
    ViewData["Title"] = ViewData["Title"] ?? "Learner Home";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/js/bootstrap.bundle.min.js"></script>
    <style>
        /* Discord-inspired color scheme and responsive design */
        html, body {
            margin: 0;
            padding: 0;
            height: 100%;
            display: flex;
            flex-direction: column;
            font-family: Arial, sans-serif;
            background-color: #36393f; /* Discord dark mode */
            color: #ffffff;
        }

        .navbar {
            background-color: #7289da;
            padding: 10px 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.5);
        }

            .navbar button {
                color: #ffffff;
                background: none;
                border: none;
                font-size: 24px;
                cursor: pointer;
            }

            .navbar a {
                color: #ffffff;
                text-decoration: none;
                margin: 0 10px;
            }

                .navbar a:hover {
                    text-decoration: underline;
                }

        .content {
            display: flex;
            flex: 1;
            padding: 20px;
        }

        .sidebar {
            width: 250px;
            background-color: #2c2f33;
            padding: 15px;
            box-shadow: 2px 0 5px rgba(0, 0, 0, 0.5);
            transition: transform 0.3s ease;
            transform: translateX(0);
        }

            .sidebar.hidden {
                transform: translateX(-100%);
            }

            .sidebar h3 {
                color: #7289da;
            }

            .sidebar a {
                display: block;
                color: #ffffff;
                text-decoration: none;
                margin: 10px 0;
                padding: 10px;
                border-radius: 5px;
            }

                .sidebar a:hover {
                    background-color: #7289da;
                }

        .main-content {
            flex: 1;
            margin-left: 260px;
            padding: 20px;
            transition: margin-left 0.3s ease;
        }

            .main-content.sidebar-collapsed {
                margin-left: 0;
            }

        .footer {
            background-color: #2c2f33;
            text-align: center;
            padding: 10px;
            color: #ffffff;
        }

        .delete-learner-link {
            color: #e60000;
            font-weight: bold;
            cursor: pointer;
            margin-top: 10px;
        }

            .delete-learner-link:hover {
                text-decoration: underline;
            }

        /* Cards (Discord Dark Theme) */
        .card {
            border: none;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            background-color: #2f3136; /* Dark card background */
            width: 48%;
            margin-bottom: 20px;
            padding: 15px;
        }

            .card h5 {
                background-color: #7289da; /* Discord Blue */
                color: #fff;
                padding: 10px;
                margin: 0;
                border-radius: 10px;
            }

            .card p {
                padding: 10px;
                color: #e0e0e0;
                font-size: 14px;
            }

            .card .btn-instagram {
                background: linear-gradient(135deg, #ff2a68, #ff4b69); /* Instagram Gradient for buttons */
                color: #fff;
                border: none;
                padding: 10px 20px;
                border-radius: 5px;
                font-weight: bold;
                transition: background 0.3s;
            }

                .card .btn-instagram:hover {
                    background: linear-gradient(135deg, #ff4b69, #ff2a68); /* Reverse Instagram Gradient */
                }

        /* Busy Panels */
        .busy-panel {
            background-color: #34373b; /* Darker panel background */
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
            margin-bottom: 20px;
            flex: 1;
            display: flex;
            justify-content: space-between;
            align-items: center;
            gap: 20px;
        }

            .busy-panel h6 {
                font-size: 16px;
                color: #e0e0e0;
            }

            .busy-panel .btn-instagram {
                margin-left: 10px;
            }
    </style>
</head>
<body>

    <!-- Navbar -->
    <div class="navbar">
        <button class="toggle-button" onclick="toggleSidebar()">☰</button>
        <div>
            @if (Model != null)
            {
                <span>Welcome, @Model.Fname @Model.Lname!</span>
            }
            else
            {
                <span>Welcome, Learner!</span>
            }
        </div>
        <div>
            <a href="/Account/Profile">Profile</a>
            <a href="/Account/Logout">Logout</a>
        </div>
    </div>

    <!-- Content -->
    <div class="content">
        <!-- Sidebar -->
        <div class="sidebar" id="sidebar">
            <h3>Navigation</h3>
            <a href="@Url.Action("QuestActions", "Learners")" class="btn btn-primary">Manage Quests</a>
            <a href="/DiscussionRooms">Discussion Rooms</a>
            <a href="/Learners/LearningPaths">Your Learning Paths</a>
            <a href="/Courses">Available Courses</a>
            <a href="/Notifications">Notifications</a>
            <a href="/Personalization/LearnerProfiles">Manage Personalization Profiles</a>
            <a href="javascript:void(0);" class="delete-learner-link" onclick="confirmDelete()">Delete Learner</a>
        </div>

        <!-- Main Content -->
        <div class="main-content" id="main-content">
            <h1>Your Learning Dashboard</h1>

            <div class="card">
                <h5>Learner Info</h5>
                <p>
                    @if (Model != null)
                    {
                        <strong>Gender:</strong> @(Model.Gender.HasValue ? (Model.Gender.Value ? "Male" : "Female") : "Not Specified")
                        <br>
                        <strong>Birth Date:</strong> @(Model.BirthDate.HasValue ? Model.BirthDate.Value.ToString("yyyy-MM-dd") : "Not Provided")
                        <br>
                        <strong>Country:</strong> @(string.IsNullOrEmpty(Model.Country) ? "Not Provided" : Model.Country)
                    }
                    else
                    {
                    <p>Error: Learner data is unavailable.</p>
                    }
                </p>

                <!-- Buttons to Edit Info and Personalization -->
                <div class="d-flex justify-content-between">
                    <a href="/Learners/EditInfo" class="btn btn-warning">Edit Info</a>
                    <a href="/Personalization/LearnerProfiles/Edit" class="btn btn-primary">Edit Personalization</a>
                    <!-- Link to the AddGoal view -->
                    <a class="btn btn-primary" href="@Url.Action("AddGoal", "Learners")">
                       
                        Add Learning Goal
                    </a>

                </div>
            </div>

            <!-- Busy Panels -->
            <div class="busy-panel">
                <div>
                    <h6>Pending Notifications</h6>
                    <p>3 unread notifications</p>
                </div>
                <a href="/Notifications" class="btn-instagram">View All</a>
            </div>
            <div class="card">

                <h5>Quest Management</h5>
                <p>
                    <a href="@Url.Action("QuestActions", "Learners")" class="btn btn-primary">Manage Quests</a>
                </p>
            </div>

            <div class="busy-panel">
                <div>
                    <h6>Active Courses</h6>
                    <p>2 courses in progress</p>
                </div>
                <a href="/Courses" class="btn-instagram">View Courses</a>
            </div>

            <div class="busy-panel">
                <div>
                    <h6>Discussion Rooms</h6>
                    <p>1 active discussion</p>
                </div>
                <a href="/DiscussionRooms/GetForums?learnerId=@Model.Sid" class="btn-instagram">Discussion Rooms</a>

            </div>

            <!-- Quick Links Card -->
            <div class="card">
                <h5>Quick Links</h5>
                <p>
                    <a href="/Personalization/LearnerProfiles" class="btn-instagram">Manage Personalization</a>
                    <a href="/Courses" class="btn btn-primary">Browse Courses</a>
                    <a href="@Url.Action("ViewProfileById", "Learners", new { learnerId = Model.Sid })">View Profile</a>

                </p>
            </div>
        </div>
    </div>

    <!-- Footer -->
    <div class="footer">
        <p>Learner Dashboard © 2024</p>
    </div>

    <script>
        function toggleSidebar() {
            const sidebar = document.getElementById('sidebar');
            const mainContent = document.getElementById('main-content');
            sidebar.classList.toggle('hidden');
            mainContent.classList.toggle('sidebar-collapsed');
        }

        function confirmDelete() {
            if (confirm("Are you sure you want to delete this learner from the website?")) {
                // Redirect to the Delete Learner action
                window.location.href = '@Url.Action("Delete", "Learners")';  // Correct URL for DeleteLearner action in LearnerController
            }
        }
    </script>
</body>
</html>
