@model IEnumerable<WebApplicationProject.Models.PersonalizationProfile>

@{
    ViewData["Title"] = "Manage Personalization Profiles";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <style>
        /* General page styling */
        body {
            background: linear-gradient(135deg, #6a82fb, #fc5c7d); /* Soft gradient background */
            color: #ffffff;
            font-family: 'Arial', sans-serif;
            margin: 0;
            padding: 0;
        }

        .container {
            max-width: 1200px;
            margin: 20px auto;
            padding: 0 20px;
        }

        .page-title {
            text-align: center;
            font-size: 3rem;
            color: #fff;
            margin-bottom: 40px;
            text-shadow: 2px 2px 8px rgba(0, 0, 0, 0.5);
        }

        /* Search bar styling */
        .search-bar {
            display: flex;
            justify-content: center;
            margin-bottom: 20px;
        }

        .search-input {
            padding: 12px;
            border: 1px solid #7289da;
            border-radius: 5px;
            width: 70%;
            margin-right: 10px;
            background-color: #40444b;
            color: #ffffff;
        }

        .search-button {
            padding: 12px 18px;
            background-color: #7289da;
            border: none;
            border-radius: 5px;
            color: #ffffff;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .search-button:hover {
            background-color: #5b6eae;
        }

        /* Profile card styling */
        .profile-post {
            border: 1px solid #2f3136; 
            border-radius: 8px;
            padding: 20px;
            margin-bottom: 20px;
            background-color: #2f3136; 
            color: #ffffff;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
            transition: transform 0.3s, box-shadow 0.3s;
        }

        .profile-post:hover {
            transform: scale(1.03);
            box-shadow: 0 8px 30px rgba(0, 0, 0, 0.5);
        }

        .profile-header {
            font-size: 20px;
            font-weight: bold;
            color: #ff6347; /* Soft orange-red */
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .profile-id {
            font-size: 14px;
            color: #99aab5;
        }

        .profile-details {
            margin-top: 15px;
            font-size: 16px;
        }

        .profile-details p {
            margin: 8px 0;
        }

        /* Delete Button styling */
        .btn-danger {
            background-color: #ff4d4d;
            color: white;
            border: none;
            padding: 12px 20px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            transition: background-color 0.3s, transform 0.3s;
        }

        .btn-danger:hover {
            background-color: #e60000;
            transform: scale(1.05);
        }

        /* Scrollable list */
        .profile-list {
            max-height: 500px;
            overflow-y: auto;
            padding: 10px;
            border-radius: 8px;
            background-color: #40444b;
            border: 1px solid #2f3136;
        }

        /* Toggle bar styling */
        .toggle-bar {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 10px;
            cursor: pointer;
            padding: 10px;
            background-color: #7289da;
            border-radius: 5px;
            transition: background-color 0.3s;
        }

        .toggle-bar:hover {
            background-color: #5b6eae;
        }

        .toggle-content {
            display: none;
            padding: 10px;
            background-color: #40444b;
            border-radius: 5px;
            margin-top: 5px;
        }

        /* Responsive styling */
       

            .page-title {
                font-size: 2rem;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <h1 class="page-title">Manage Personalization Profiles</h1>

        <div class="search-bar">
            <input type="text" class="search-input" placeholder="Search profiles..." id="searchInput" onkeyup="filterProfiles()">
            <button class="search-button">Search</button>
        </div>

        <div class="profile-list" id="profileList">
            @foreach (var profile in Model)
            {
                <div class="profile-post">
                    <div class="profile-header">
                        <strong>@profile.SidNavigation?.Fname @profile.SidNavigation?.Lname</strong>
                        <span class="profile-id">SID: @profile.Sid</span>
                    </div>
                    <div class="profile-details">
                        <p><strong>Preferred Content Type:</strong> @profile.PreferedContentType</p>
                        <p><strong>Emotional State:</strong> @profile.EmotionalState</p>
                        <p><strong>Personality Type:</strong> @profile.PersonalityType</p>
                    </div>

                    <!-- Delete Button with confirmation -->
                    <form method="post" action="@Url.Action("Delete", "Personalization", new { sid = profile.Sid, orderNumber = profile.OrderNumber })" onsubmit="return confirmDelete();">
                        <button type="submit" class="btn-danger">Delete</button>
                    </form>
                </div>
            }
        </div>
    </div>

    <script>
        // Confirmation alert before deletion
        function confirmDelete() {
            return confirm("Are you sure you want to delete this personalization profile?");
        }

        // Filter profiles based on search input
        function filterProfiles() {
            const input = document.getElementById('searchInput');
            const filter = input.value.toLowerCase();
            const profileList = document.getElementById('profileList');
            const profiles = profileList.getElementsByClassName('profile-post');

            for (let i = 0; i < profiles.length; i++) {
                const profileHeader = profiles[i].getElementsByClassName('profile-header')[0];
                if (profileHeader) {
                    const txtValue = profileHeader.textContent || profileHeader.innerText;
                    profiles[i].style.display = txtValue.toLowerCase().indexOf(filter) > -1 ? "" : "none";
                }
            }
        }
    </script>
</body>
</html>
