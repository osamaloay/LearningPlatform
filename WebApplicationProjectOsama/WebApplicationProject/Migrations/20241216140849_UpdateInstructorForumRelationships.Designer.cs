// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplicationProject.Models;

#nullable disable

namespace WebApplicationProject.Migrations
{
    [DbContext(typeof(WebsiteContext))]
    [Migration("20241216140849_UpdateInstructorForumRelationships")]
    partial class UpdateInstructorForumRelationships
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CompletedPrerequisite", b =>
                {
                    b.Property<int>("Sid")
                        .HasColumnType("int")
                        .HasColumnName("sid");

                    b.Property<int>("Cid")
                        .HasColumnType("int")
                        .HasColumnName("cid");

                    b.Property<string>("Prerequisite")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("prerequisite");

                    b.HasKey("Sid", "Cid", "Prerequisite")
                        .HasName("PK__complete__991104818EDA5AA3");

                    b.HasIndex("Cid", "Prerequisite");

                    b.HasIndex(new[] { "Prerequisite" }, "ix_completed_prerequisites");

                    b.HasIndex(new[] { "Sid" }, "ix_completed_prerequisites2");

                    b.HasIndex(new[] { "Cid" }, "ix_completed_prerequisites3");

                    b.ToTable("completed_prerequisites", (string)null);
                });

            modelBuilder.Entity("LearningGoal1", b =>
                {
                    b.Property<int>("GoalId")
                        .HasColumnType("int")
                        .HasColumnName("goal_id");

                    b.Property<int>("Sid")
                        .HasColumnType("int")
                        .HasColumnName("sid");

                    b.HasKey("GoalId", "Sid")
                        .HasName("PK__learning__0BBA67F73BEA2E8F");

                    b.HasIndex(new[] { "GoalId" }, "ix_learning_goals");

                    b.HasIndex(new[] { "Sid" }, "ix_learning_goals2");

                    b.ToTable("learning_goals", (string)null);
                });

            modelBuilder.Entity("Teach", b =>
                {
                    b.Property<int>("InstructorId")
                        .HasColumnType("int")
                        .HasColumnName("instructor_id");

                    b.Property<int>("Cid")
                        .HasColumnType("int")
                        .HasColumnName("cid");

                    b.HasKey("InstructorId", "Cid")
                        .HasName("PK__teaches__4C6C2BED0D9F67CB");

                    b.HasIndex(new[] { "InstructorId" }, "ix_teaches");

                    b.HasIndex(new[] { "Cid" }, "ix_teaches2");

                    b.ToTable("teaches", (string)null);
                });

            modelBuilder.Entity("WebApplicationProject.Models.Acheivement", b =>
                {
                    b.Property<int>("AcheivementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("acheivement_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AcheivementId"));

                    b.Property<int>("BadgeId")
                        .HasColumnType("int")
                        .HasColumnName("badge_id");

                    b.Property<DateTime>("DateEarned")
                        .HasColumnType("datetime")
                        .HasColumnName("date_earned");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValue("none")
                        .HasColumnName("description");

                    b.Property<int>("Sid")
                        .HasColumnType("int")
                        .HasColumnName("sid");

                    b.Property<string>("Type")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("excellence")
                        .HasColumnName("type");

                    b.HasKey("AcheivementId")
                        .HasName("PK__acheivem__9DEBB02A0EC15079");

                    b.HasIndex(new[] { "Type" }, "ix_acheivement");

                    b.HasIndex(new[] { "DateEarned" }, "ix_acheivement3");

                    b.HasIndex(new[] { "Sid" }, "ix_acheivement4");

                    b.HasIndex(new[] { "BadgeId" }, "ix_acheivement5");

                    b.ToTable("acheivement", (string)null);
                });

            modelBuilder.Entity("WebApplicationProject.Models.Admin", b =>
                {
                    b.Property<int>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("aid");

                    b.HasKey("Aid")
                        .HasName("PK__admin__DE508E2E83B730F6");

                    b.HasIndex(new[] { "Aid" }, "ix_admin");

                    b.ToTable("admin", (string)null);
                });

            modelBuilder.Entity("WebApplicationProject.Models.Assessment", b =>
                {
                    b.Property<int>("AssessmentId")
                        .HasColumnType("int")
                        .HasColumnName("assessment_id");

                    b.Property<int>("Cid")
                        .HasColumnType("int")
                        .HasColumnName("cid");

                    b.Property<string>("Criteria")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("criteria");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValue("none")
                        .HasColumnName("description");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<int>("PassingMarks")
                        .HasColumnType("int")
                        .HasColumnName("passing_marks");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("title");

                    b.Property<int>("TotalMarks")
                        .HasColumnType("int")
                        .HasColumnName("total_marks");

                    b.Property<string>("Type")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("quiz")
                        .HasColumnName("type");

                    b.Property<int>("Weightage")
                        .HasColumnType("int")
                        .HasColumnName("weightage");

                    b.HasKey("AssessmentId")
                        .HasName("PK__assessme__00B98C268A1BB57A");

                    b.HasIndex(new[] { "AssessmentId" }, "ix_assessment");

                    b.HasIndex(new[] { "Cid" }, "ix_assessment2");

                    b.HasIndex(new[] { "ModuleId" }, "ix_assessment3");

                    b.HasIndex(new[] { "ModuleId", "Cid" }, "ix_assessment4");

                    b.ToTable("assessment", (string)null);
                });

            modelBuilder.Entity("WebApplicationProject.Models.Badge", b =>
                {
                    b.Property<int>("BadgeId")
                        .HasColumnType("int")
                        .HasColumnName("badge_id");

                    b.Property<string>("Criteria")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("criteria");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("description");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(2048)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2048)")
                        .HasColumnName("image_url");

                    b.Property<int>("Points")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("points")
                        .HasDefaultValueSql("('100')");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("title");

                    b.HasKey("BadgeId")
                        .HasName("PK__badge__E798965681CD864A");

                    b.HasIndex(new[] { "Criteria" }, "ix_badge");

                    b.HasIndex(new[] { "Title" }, "ix_badge2");

                    b.HasIndex(new[] { "Points" }, "ix_badge3");

                    b.ToTable("badge", (string)null);
                });

            modelBuilder.Entity("WebApplicationProject.Models.CollaborativeQuest", b =>
                {
                    b.Property<int>("QuestId")
                        .HasColumnType("int")
                        .HasColumnName("quest_id");

                    b.Property<DateTime?>("Deadline")
                        .HasColumnType("datetime")
                        .HasColumnName("deadline");

                    b.Property<int?>("MaxParticipants")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(5)
                        .HasColumnName("max_participants");

                    b.HasKey("QuestId")
                        .HasName("PK__collabor__9A0F00CDBF6EA3F6");

                    b.HasIndex(new[] { "MaxParticipants" }, "ix_collaborative_quest");

                    b.ToTable("collaborative_quest", (string)null);
                });

            modelBuilder.Entity("WebApplicationProject.Models.ContentLibrary", b =>
                {
                    b.Property<int>("ContentId")
                        .HasColumnType("int")
                        .HasColumnName("content_id");

                    b.Property<int>("Cid")
                        .HasColumnType("int")
                        .HasColumnName("cid");

                    b.Property<string>("ContentUrl")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2048)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2048)")
                        .HasDefaultValue("none")
                        .HasColumnName("content_url");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValue("none")
                        .HasColumnName("description");

                    b.Property<string>("Metadata")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValue("none")
                        .HasColumnName("metadata");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("title");

                    b.Property<string>("Type")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("text")
                        .HasColumnName("type");

                    b.HasKey("ContentId")
                        .HasName("PK__content___655FE5104195A07F");

                    b.HasIndex("ModuleId", "Cid");

                    b.HasIndex(new[] { "ContentId" }, "ix_content_library");

                    b.HasIndex(new[] { "Title" }, "ix_content_library2");

                    b.HasIndex(new[] { "ModuleId" }, "ix_content_library3");

                    b.HasIndex(new[] { "Cid" }, "ix_content_library4");

                    b.ToTable("content_library", (string)null);
                });

            modelBuilder.Entity("WebApplicationProject.Models.Course", b =>
                {
                    b.Property<int>("Cid")
                        .HasColumnType("int")
                        .HasColumnName("cid");

                    b.Property<int>("CreditPoints")
                        .HasColumnType("int")
                        .HasColumnName("credit_points");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("description");

                    b.Property<string>("DifficultyLevel")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("2")
                        .HasColumnName("difficulty_level");

                    b.Property<string>("LearningObjective")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("learning_objective");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("title");

                    b.HasKey("Cid")
                        .HasName("PK__course__D837D05F4B43937A");

                    b.HasIndex(new[] { "Cid" }, "ix_course");

                    b.HasIndex(new[] { "Title" }, "ix_course2");

                    b.HasIndex(new[] { "CreditPoints" }, "ix_course3");

                    b.ToTable("course", (string)null);
                });

            modelBuilder.Entity("WebApplicationProject.Models.DisscussionForum", b =>
                {
                    b.Property<int>("ForumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("forum_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ForumId"));

                    b.Property<int>("Cid")
                        .HasColumnType("int")
                        .HasColumnName("cid");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValue("none")
                        .HasColumnName("description");

                    b.Property<int?>("InstructorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastActivity")
                        .HasColumnType("datetime")
                        .HasColumnName("last_activity");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<DateTime?>("TimeStamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("time_stamp")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("title");

                    b.HasKey("ForumId")
                        .HasName("PK__disscuss__69A2FA583281A987");

                    b.HasIndex("InstructorId");

                    b.HasIndex(new[] { "ModuleId", "Cid" }, "ix_disscussion_forum");

                    b.ToTable("disscussion_forum", (string)null);
                });

            modelBuilder.Entity("WebApplicationProject.Models.EmotionalFeedback", b =>
                {
                    b.Property<int>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("feedback_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedbackId"));

                    b.Property<int>("ActivityId")
                        .HasColumnType("int")
                        .HasColumnName("activity_id");

                    b.Property<string>("EmotionalState")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("emotional_state");

                    b.Property<int>("Sid")
                        .HasColumnType("int")
                        .HasColumnName("sid");

                    b.Property<DateTime?>("TimeStamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("time_stamp")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("FeedbackId")
                        .HasName("PK__emotiona__7A6B2B8CD8797F97");

                    b.HasIndex("ActivityId");

                    b.HasIndex(new[] { "Sid" }, "ix_emotional_feedback");

                    b.HasIndex(new[] { "EmotionalState" }, "ix_emotional_feedback2");

                    b.ToTable("emotional_feedback", (string)null);
                });

            modelBuilder.Entity("WebApplicationProject.Models.EmotionalFeedbackReview", b =>
                {
                    b.Property<int>("FeedbackId")
                        .HasColumnType("int")
                        .HasColumnName("feedback_id");

                    b.Property<int>("InstructorId")
                        .HasColumnType("int")
                        .HasColumnName("instructor_id");

                    b.Property<string>("Feedback")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("feedback");

                    b.HasKey("FeedbackId", "InstructorId")
                        .HasName("PK__emotiona__E075DEE26F61D688");

                    b.HasIndex(new[] { "FeedbackId" }, "ix_emotional_feedback_review");

                    b.HasIndex(new[] { "InstructorId" }, "ix_emotional_feedback_review2");

                    b.HasIndex(new[] { "Feedback" }, "ix_emotional_feedback_review3");

                    b.ToTable("emotional_feedback_review", (string)null);
                });

            modelBuilder.Entity("WebApplicationProject.Models.Enrollment", b =>
                {
                    b.Property<int>("EnrollmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("enrollment_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnrollmentId"));

                    b.Property<int>("Cid")
                        .HasColumnType("int")
                        .HasColumnName("cid");

                    b.Property<DateTime?>("CompletionDate")
                        .HasColumnType("datetime")
                        .HasColumnName("completion_date");

                    b.Property<DateTime>("EnrollmentDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("enrollment_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("Sid")
                        .HasColumnType("int")
                        .HasColumnName("sid");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("enrolled")
                        .HasColumnName("status");

                    b.HasKey("EnrollmentId")
                        .HasName("PK__enrollme__6D24AA7AC8EDA5D2");

                    b.HasIndex(new[] { "Sid" }, "ix_enrollment");

                    b.HasIndex(new[] { "Cid" }, "ix_enrollment2");

                    b.HasIndex(new[] { "Status" }, "ix_enrollment3");

                    b.HasIndex(new[] { "EnrollmentDate" }, "ix_enrollment4");

                    b.ToTable("enrollment", (string)null);
                });

            modelBuilder.Entity("WebApplicationProject.Models.HealthCondition", b =>
                {
                    b.Property<int>("Sid")
                        .HasColumnType("int")
                        .HasColumnName("sid");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int")
                        .HasColumnName("order_number");

                    b.Property<string>("Condition")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("condition");

                    b.HasKey("Sid", "OrderNumber", "Condition")
                        .HasName("PK__health_c__8CD72AB92DF42DBC");

                    b.HasIndex(new[] { "Sid" }, "ix_health_condition");

                    b.HasIndex(new[] { "Condition" }, "ix_health_condition2");

                    b.HasIndex(new[] { "OrderNumber" }, "ix_health_condition3");

                    b.ToTable("health_condition", (string)null);
                });

            modelBuilder.Entity("WebApplicationProject.Models.Instructor", b =>
                {
                    b.Property<int>("InstructorId")
                        .HasColumnType("int")
                        .HasColumnName("instructor_id");

                    b.Property<string>("ExpertiseArea")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasDefaultValue("not-specified")
                        .HasColumnName("expertise_area");

                    b.Property<string>("LatestQualification")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("not-specified")
                        .HasColumnName("latest_qualification");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.HasKey("InstructorId")
                        .HasName("PK__instruct__A1EF56E851CB9174");

                    b.HasIndex(new[] { "InstructorId" }, "ix_instructor");

                    b.HasIndex(new[] { "Name" }, "ix_instructor2");

                    b.HasIndex(new[] { "ExpertiseArea" }, "ix_instructor3");

                    b.ToTable("instructor", (string)null);
                });

            modelBuilder.Entity("WebApplicationProject.Models.InstructorDisscussion", b =>
                {
                    b.Property<int>("ForumId")
                        .HasColumnType("int");

                    b.Property<int>("InstructorId")
                        .HasColumnType("int");

                    b.Property<string>("Post")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimePosted")
                        .HasColumnType("datetime2");

                    b.HasKey("ForumId", "InstructorId");

                    b.HasIndex("InstructorId");

                    b.ToTable("InstructorDisscussions");
                });

            modelBuilder.Entity("WebApplicationProject.Models.InteractionLog", b =>
                {
                    b.Property<int>("LogId")
                        .HasColumnType("int")
                        .HasColumnName("log_id");

                    b.Property<string>("ActionType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("action_type");

                    b.Property<int>("ActivityId")
                        .HasColumnType("int")
                        .HasColumnName("activity_id");

                    b.Property<int?>("Duration")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(60);

                    b.Property<int>("Sid")
                        .HasColumnType("int")
                        .HasColumnName("sid");

                    b.Property<DateTime?>("TimeStamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("time_stamp")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("LogId")
                        .HasName("PK__interact__9E2397E0C19BF7FA");

                    b.HasIndex(new[] { "ActionType" }, "ix_interaction_log2");

                    b.HasIndex(new[] { "Sid" }, "ix_interaction_log5");

                    b.HasIndex(new[] { "ActivityId" }, "ix_interaction_log6");

                    b.ToTable("interaction_log", (string)null);
                });

            modelBuilder.Entity("WebApplicationProject.Models.LeaderBoard", b =>
                {
                    b.Property<int>("BoardId")
                        .HasColumnType("int")
                        .HasColumnName("board_id");

                    b.Property<string>("Season")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("winter")
                        .HasColumnName("season");

                    b.HasKey("BoardId")
                        .HasName("PK__leader_b__FB1C96E955016458");

                    b.HasIndex(new[] { "Season" }, "ix_leader_board");

                    b.ToTable("leader_board", (string)null);
                });

            modelBuilder.Entity("WebApplicationProject.Models.Learner", b =>
                {
                    b.Property<int>("Sid")
                        .HasColumnType("int")
                        .HasColumnName("sid");

                    b.Property<DateOnly?>("BirthDate")
                        .HasColumnType("date")
                        .HasColumnName("birth_date");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("country");

                    b.Property<string>("Culture")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("culture");

                    b.Property<string>("Fname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fname");

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit")
                        .HasColumnName("gender");

                    b.Property<string>("Lname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("lname");

                    b.HasKey("Sid")
                        .HasName("PK__learner__DDDFDD36DCF5400F");

                    b.HasIndex(new[] { "Country" }, "ix_learner");

                    b.HasIndex(new[] { "Fname", "Lname" }, "ix_learner2");

                    b.HasIndex(new[] { "BirthDate" }, "ix_learner3");

                    b.HasIndex(new[] { "Sid" }, "ix_learner4");

                    b.ToTable("learner", (string)null);
                });

            modelBuilder.Entity("WebApplicationProject.Models.LearnerDisscussion", b =>
                {
                    b.Property<int>("ForumId")
                        .HasColumnType("int")
                        .HasColumnName("forum_id");

                    b.Property<int>("Sid")
                        .HasColumnType("int")
                        .HasColumnName("sid");

                    b.Property<string>("Post")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("post");

                    b.Property<DateTime>("TimePosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("time_posted")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("ForumId", "Sid", "Post", "TimePosted")
                        .HasName("PK__learner___13E6176B9DE81B8F");

                    b.HasIndex(new[] { "Post" }, "ix_learner_disscussion");

                    b.HasIndex(new[] { "TimePosted" }, "ix_learner_disscussion2");

                    b.HasIndex(new[] { "Sid" }, "ix_learner_disscussion3");

                    b.HasIndex(new[] { "ForumId" }, "ix_learner_disscussion4");

                    b.ToTable("learner_disscussion", (string)null);
                });

            modelBuilder.Entity("WebApplicationProject.Models.LearnerMastery", b =>
                {
                    b.Property<int>("Sid")
                        .HasColumnType("int")
                        .HasColumnName("sid");

                    b.Property<int>("QuestId")
                        .HasColumnType("int")
                        .HasColumnName("quest_id");

                    b.Property<string>("CompletionStatus")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("incomplete")
                        .HasColumnName("completion_status");

                    b.HasKey("Sid", "QuestId")
                        .HasName("PK__learner___147F2D3AF6FFC9B9");

                    b.HasIndex("QuestId");

                    b.HasIndex(new[] { "CompletionStatus" }, "ix_learner_mastery");

                    b.HasIndex(new[] { "Sid" }, "ix_learner_mastery2");

                    b.ToTable("learner_mastery", (string)null);
                });

            modelBuilder.Entity("WebApplicationProject.Models.LearnersCollaboration", b =>
                {
                    b.Property<int>("QuestId")
                        .HasColumnType("int")
                        .HasColumnName("quest_id");

                    b.Property<int>("Sid")
                        .HasColumnType("int")
                        .HasColumnName("sid");

                    b.Property<string>("CompletetionStatus")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("incomplete")
                        .HasColumnName("completetion_status");

                    b.HasKey("QuestId", "Sid")
                        .HasName("PK__learners__E7D2FD1E1001A214");

                    b.HasIndex(new[] { "CompletetionStatus" }, "ix_learners_collaboration");

                    b.HasIndex(new[] { "Sid" }, "ix_learners_collaboration2");

                    b.ToTable("learners_collaboration", (string)null);
                });

            modelBuilder.Entity("WebApplicationProject.Models.LearningActivity", b =>
                {
                    b.Property<int>("ActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("activity_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActivityId"));

                    b.Property<string>("ActivityType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("activity_type");

                    b.Property<int>("Cid")
                        .HasColumnType("int")
                        .HasColumnName("cid");

                    b.Property<string>("Instruction")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValue("none")
                        .HasColumnName("instruction");

                    b.Property<int>("MaxPoints")
                        .HasColumnType("int")
                        .HasColumnName("max_points");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.HasKey("ActivityId")
                        .HasName("PK__learning__482FBD6375FEF9DA");

                    b.HasIndex(new[] { "ActivityId" }, "ix_learning_activity");

                    b.HasIndex(new[] { "ModuleId" }, "ix_learning_activity2");

                    b.HasIndex(new[] { "Cid" }, "ix_learning_activity3");

                    b.HasIndex(new[] { "ModuleId", "Cid" }, "ix_learning_activity4");

                    b.ToTable("learning_activity", (string)null);
                });

            modelBuilder.Entity("WebApplicationProject.Models.LearningGoal", b =>
                {
                    b.Property<int>("GoalId")
                        .HasColumnType("int")
                        .HasColumnName("goal_id");

                    b.Property<DateTime?>("Deadline")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("deadline")
                        .HasDefaultValueSql("(datepart(year,getdate())+datepart(year,(1)))");

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValue("yet to be determined")
                        .HasColumnName("description");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("incomplete")
                        .HasColumnName("status");

                    b.HasKey("GoalId")
                        .HasName("PK__learning__76679A24113D1518");

                    b.ToTable("learning_goal", (string)null);
                });

            modelBuilder.Entity("WebApplicationProject.Models.LearningPath", b =>
                {
                    b.Property<int>("PathId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("path_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PathId"));

                    b.Property<float?>("CompletionStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("real")
                        .HasDefaultValue(0f)
                        .HasColumnName("completion_status");

                    b.Property<string>("CustomContent")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("custom_content");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int")
                        .HasColumnName("order_number");

                    b.Property<int>("Sid")
                        .HasColumnType("int")
                        .HasColumnName("sid");

                    b.HasKey("PathId")
                        .HasName("PK__learning__464F800DD9332737");

                    b.HasIndex(new[] { "Sid" }, "ix_learning_path");

                    b.HasIndex(new[] { "OrderNumber" }, "ix_learning_path2");

                    b.HasIndex(new[] { "CompletionStatus" }, "ix_learning_path3");

                    b.HasIndex(new[] { "Sid", "OrderNumber" }, "ix_learning_path4");

                    b.ToTable("learning_path", (string)null);
                });

            modelBuilder.Entity("WebApplicationProject.Models.LearningPathRule", b =>
                {
                    b.Property<string>("ApadtiveRule")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("apadtive_rule");

                    b.Property<int>("PathId")
                        .HasColumnType("int")
                        .HasColumnName("path_id");

                    b.HasKey("ApadtiveRule", "PathId")
                        .HasName("PK__learning__DF14AC0D2331AEF4");

                    b.HasIndex(new[] { "ApadtiveRule" }, "ix_learning_path_rules");

                    b.HasIndex(new[] { "PathId" }, "ix_learning_path_rules2");

                    b.ToTable("learning_path_rules", (string)null);
                });

            modelBuilder.Entity("WebApplicationProject.Models.LearningPreference", b =>
                {
                    b.Property<int>("Sid")
                        .HasColumnType("int")
                        .HasColumnName("sid");

                    b.Property<string>("Preference")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("preference");

                    b.HasKey("Sid", "Preference")
                        .HasName("PK__learning__DA46C0943BFCE533");

                    b.HasIndex(new[] { "Sid" }, "ix_learning_preferences");

                    b.HasIndex(new[] { "Preference" }, "ix_learning_preferences2");

                    b.ToTable("learning_preferences", (string)null);
                });

            modelBuilder.Entity("WebApplicationProject.Models.Module", b =>
                {
                    b.Property<int>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<int>("Cid")
                        .HasColumnType("int")
                        .HasColumnName("cid");

                    b.Property<int?>("DifficultyLevel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(2)
                        .HasColumnName("difficulty_level");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("title");

                    b.Property<string>("Url")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2048)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2048)")
                        .HasDefaultValue("none")
                        .HasColumnName("url");

                    b.HasKey("ModuleId", "Cid")
                        .HasName("PK__modules__F7AE7B56ED56B1EB");

                    b.HasIndex("Cid");

                    b.HasIndex(new[] { "ModuleId" }, "ix_modules");

                    b.HasIndex(new[] { "Title" }, "ix_modules2");

                    b.HasIndex(new[] { "DifficultyLevel" }, "ix_modules3");

                    b.ToTable("modules", (string)null);
                });

            modelBuilder.Entity("WebApplicationProject.Models.ModuleContent", b =>
                {
                    b.Property<int>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<int>("Cid")
                        .HasColumnType("int")
                        .HasColumnName("cid");

                    b.Property<string>("Content")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("content");

                    b.HasKey("ModuleId", "Cid", "Content")
                        .HasName("PK__module_c__4A34238F76ADAA7F");

                    b.HasIndex(new[] { "ModuleId" }, "ix_module_content");

                    b.HasIndex(new[] { "Content" }, "ix_module_content2");

                    b.ToTable("module_content", (string)null);
                });

            modelBuilder.Entity("WebApplicationProject.Models.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("notification_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationId"));

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("message");

                    b.Property<DateTime?>("TimeStamp")
                        .HasColumnType("datetime")
                        .HasColumnName("time_stamp");

                    b.Property<string>("Urgency")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("low")
                        .HasColumnName("urgency");

                    b.HasKey("NotificationId")
                        .HasName("PK__notifica__E059842FBCD13758");

                    b.HasIndex(new[] { "Urgency" }, "ix_notification");

                    b.HasIndex(new[] { "TimeStamp" }, "ix_notification2");

                    b.ToTable("notification", (string)null);
                });

            modelBuilder.Entity("WebApplicationProject.Models.PathReview", b =>
                {
                    b.Property<int>("InstructorId")
                        .HasColumnType("int")
                        .HasColumnName("instructor_id");

                    b.Property<int>("PathId")
                        .HasColumnType("int")
                        .HasColumnName("path_id");

                    b.Property<string>("Feedback")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("feedback");

                    b.HasKey("InstructorId", "PathId")
                        .HasName("PK__path_rev__658BAEE86D5DD0F0");

                    b.HasIndex(new[] { "InstructorId" }, "ix_path_review");

                    b.HasIndex(new[] { "PathId" }, "ix_path_review2");

                    b.ToTable("path_review", (string)null);
                });

            modelBuilder.Entity("WebApplicationProject.Models.PersonalizationProfile", b =>
                {
                    b.Property<int>("Sid")
                        .HasColumnType("int")
                        .HasColumnName("sid");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int")
                        .HasColumnName("order_number");

                    b.Property<string>("EmotionalState")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("sad")
                        .HasColumnName("emotional_state");

                    b.Property<string>("PersonalityType")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("curious")
                        .HasColumnName("personality_type");

                    b.Property<string>("PreferedContentType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("prefered_content_type");

                    b.HasKey("Sid", "OrderNumber")
                        .HasName("PK__personal__2AEF3E7B58DCBB32");

                    b.HasIndex(new[] { "Sid" }, "ix_personalization_profile");

                    b.HasIndex(new[] { "OrderNumber" }, "ix_personalization_profile2");

                    b.HasIndex(new[] { "PreferedContentType" }, "ix_personalization_profile3");

                    b.HasIndex(new[] { "PersonalityType" }, "ix_personalization_profile4");

                    b.HasIndex(new[] { "EmotionalState" }, "ix_personalization_profile5");

                    b.ToTable("personalization_profile", (string)null);
                });

            modelBuilder.Entity("WebApplicationProject.Models.PrerequisitesCourse", b =>
                {
                    b.Property<int>("Cid")
                        .HasColumnType("int")
                        .HasColumnName("cid");

                    b.Property<string>("Prerequisite")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("prerequisite");

                    b.HasKey("Cid", "Prerequisite")
                        .HasName("PK__prerequi__4CED9B75946F969F");

                    b.HasIndex(new[] { "Cid" }, "ix_prerequisites_course");

                    b.ToTable("prerequisites_course", (string)null);
                });

            modelBuilder.Entity("WebApplicationProject.Models.Quest", b =>
                {
                    b.Property<int>("QuestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("quest_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuestId"));

                    b.Property<string>("Criteria")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValue("pass the basics")
                        .HasColumnName("criteria");

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValue("none")
                        .HasColumnName("description");

                    b.Property<string>("DifficultyLevel")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValue("2")
                        .HasColumnName("difficulty_level");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("title");

                    b.HasKey("QuestId")
                        .HasName("PK__quest__9A0F00CD7B2DD972");

                    b.HasIndex(new[] { "DifficultyLevel" }, "ix_quest");

                    b.ToTable("quest", (string)null);
                });

            modelBuilder.Entity("WebApplicationProject.Models.QuestReward", b =>
                {
                    b.Property<int>("RewardId")
                        .HasColumnType("int")
                        .HasColumnName("reward_id");

                    b.Property<int>("QuestId")
                        .HasColumnType("int")
                        .HasColumnName("quest_id");

                    b.Property<int>("Sid")
                        .HasColumnType("int")
                        .HasColumnName("sid");

                    b.Property<DateTime?>("TimeEarned")
                        .HasColumnType("datetime")
                        .HasColumnName("time_earned");

                    b.HasKey("RewardId", "QuestId", "Sid")
                        .HasName("PK__quest_re__C3A8B66D7F854DC9");

                    b.HasIndex(new[] { "RewardId" }, "ix_quest_reward2");

                    b.HasIndex(new[] { "QuestId" }, "ix_quest_reward3");

                    b.HasIndex(new[] { "Sid" }, "ix_quest_reward4");

                    b.ToTable("quest_reward", (string)null);
                });

            modelBuilder.Entity("WebApplicationProject.Models.Ranking", b =>
                {
                    b.Property<int>("BoardId")
                        .HasColumnType("int")
                        .HasColumnName("board_id");

                    b.Property<int>("Sid")
                        .HasColumnType("int")
                        .HasColumnName("sid");

                    b.Property<int>("Cid")
                        .HasColumnType("int")
                        .HasColumnName("cid");

                    b.Property<int>("Rank")
                        .HasColumnType("int")
                        .HasColumnName("rank");

                    b.Property<int>("TotalMarks")
                        .HasColumnType("int")
                        .HasColumnName("total_marks");

                    b.HasKey("BoardId", "Sid")
                        .HasName("PK__ranking__86C16B3A8CA0D95A");

                    b.HasIndex(new[] { "BoardId" }, "ix_ranking");

                    b.HasIndex(new[] { "Sid" }, "ix_ranking2");

                    b.HasIndex(new[] { "Cid" }, "ix_ranking3");

                    b.ToTable("ranking", (string)null);
                });

            modelBuilder.Entity("WebApplicationProject.Models.RecivedNotification", b =>
                {
                    b.Property<int>("NotificationId")
                        .HasColumnType("int")
                        .HasColumnName("notification_id");

                    b.Property<int>("Sid")
                        .HasColumnType("int")
                        .HasColumnName("sid");

                    b.Property<bool?>("IsRead")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("is_read");

                    b.HasKey("NotificationId", "Sid")
                        .HasName("PK__recived___9D8479FC4AB793C3");

                    b.HasIndex(new[] { "NotificationId" }, "ix_recived_notification");

                    b.HasIndex(new[] { "Sid" }, "ix_recived_notification2");

                    b.ToTable("recived_notification", (string)null);
                });

            modelBuilder.Entity("WebApplicationProject.Models.Reward", b =>
                {
                    b.Property<int>("RewardId")
                        .HasColumnType("int")
                        .HasColumnName("reward_id");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValue("none")
                        .HasColumnName("description");

                    b.Property<string>("Type")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("cash")
                        .HasColumnName("type");

                    b.Property<int>("Value")
                        .HasColumnType("int")
                        .HasColumnName("value");

                    b.HasKey("RewardId")
                        .HasName("PK__reward__3DD599BC89DBB76D");

                    b.HasIndex(new[] { "Type" }, "ix_reward");

                    b.ToTable("reward", (string)null);
                });

            modelBuilder.Entity("WebApplicationProject.Models.Skill", b =>
                {
                    b.Property<int>("Sid")
                        .HasColumnType("int")
                        .HasColumnName("sid");

                    b.Property<string>("Skill1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("skill");

                    b.HasKey("Sid", "Skill1")
                        .HasName("PK__skills__7E2FFF696BDF99C9");

                    b.HasIndex(new[] { "Sid" }, "idx_skills");

                    b.HasIndex(new[] { "Skill1" }, "idx_skills2");

                    b.ToTable("skills", (string)null);
                });

            modelBuilder.Entity("WebApplicationProject.Models.SkillMasteryQuest", b =>
                {
                    b.Property<int>("QuestId")
                        .HasColumnType("int")
                        .HasColumnName("quest_id");

                    b.Property<string>("Skill")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("skill");

                    b.HasKey("QuestId", "Skill")
                        .HasName("PK__skill_ma__39FF22929089DF93");

                    b.HasIndex(new[] { "QuestId" }, "ix_skill_mastery_quest");

                    b.ToTable("skill_mastery_quest", (string)null);
                });

            modelBuilder.Entity("WebApplicationProject.Models.SkillProgression", b =>
                {
                    b.Property<int>("ProgressionId")
                        .HasColumnType("int")
                        .HasColumnName("progression_id");

                    b.Property<string>("ProficiencyLevel")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("newbie")
                        .HasColumnName("proficiency_level");

                    b.Property<int>("Sid")
                        .HasColumnType("int")
                        .HasColumnName("sid");

                    b.Property<string>("SkillName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("skill_name");

                    b.Property<DateTime?>("TimeStamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("time_stamp")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("ProgressionId")
                        .HasName("PK__skill_pr__F4059922D8A10E84");

                    b.HasIndex("Sid", "SkillName");

                    b.HasIndex(new[] { "ProficiencyLevel" }, "ix_skill_progression");

                    b.HasIndex(new[] { "SkillName" }, "ix_skill_progression2");

                    b.HasIndex(new[] { "TimeStamp" }, "ix_skill_progression3");

                    b.HasIndex(new[] { "Sid" }, "ix_skill_progression4");

                    b.HasIndex(new[] { "SkillName", "Sid" }, "ix_skill_progression6");

                    b.ToTable("skill_progression", (string)null);
                });

            modelBuilder.Entity("WebApplicationProject.Models.Survey", b =>
                {
                    b.Property<int>("SurveyId")
                        .HasColumnType("int")
                        .HasColumnName("survey_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("title");

                    b.HasKey("SurveyId")
                        .HasName("PK__survey__9DC31A0713FBFC68");

                    b.HasIndex(new[] { "Title" }, "ix_survey");

                    b.ToTable("survey", (string)null);
                });

            modelBuilder.Entity("WebApplicationProject.Models.SurveyQuestion", b =>
                {
                    b.Property<int>("SurveyId")
                        .HasColumnType("int")
                        .HasColumnName("survey_id");

                    b.Property<string>("Question")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("question");

                    b.HasKey("SurveyId", "Question")
                        .HasName("PK__survey_q__7469363CFCFC671B");

                    b.HasIndex(new[] { "SurveyId" }, "ix_survey_questions");

                    b.HasIndex(new[] { "Question" }, "ix_survey_questions2");

                    b.ToTable("survey_questions", (string)null);
                });

            modelBuilder.Entity("WebApplicationProject.Models.SurveyResponse", b =>
                {
                    b.Property<int>("SurveyId")
                        .HasColumnType("int")
                        .HasColumnName("survey_id");

                    b.Property<int>("Sid")
                        .HasColumnType("int")
                        .HasColumnName("sid");

                    b.Property<string>("Question")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("question");

                    b.Property<string>("Response")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("response");

                    b.HasKey("SurveyId", "Sid", "Question", "Response")
                        .HasName("PK__survey_r__81E1CE1A64DB2471");

                    b.HasIndex("SurveyId", "Question");

                    b.HasIndex(new[] { "Response" }, "ix_survey_responses");

                    b.HasIndex(new[] { "SurveyId" }, "ix_survey_responses2");

                    b.HasIndex(new[] { "Sid" }, "ix_survey_responses3");

                    b.HasIndex(new[] { "Question" }, "ix_survey_responses4");

                    b.ToTable("survey_responses", (string)null);
                });

            modelBuilder.Entity("WebApplicationProject.Models.TakenAssessment", b =>
                {
                    b.Property<int>("AssessmentId")
                        .HasColumnType("int")
                        .HasColumnName("assessment_id");

                    b.Property<int>("Sid")
                        .HasColumnType("int")
                        .HasColumnName("sid");

                    b.Property<int>("ScoredPoints")
                        .HasColumnType("int")
                        .HasColumnName("scored_points");

                    b.HasKey("AssessmentId", "Sid")
                        .HasName("PK__taken_as__7D6471F5A30DD9F0");

                    b.HasIndex(new[] { "AssessmentId" }, "ix_taken_assessment");

                    b.HasIndex(new[] { "Sid" }, "ix_taken_assessment2");

                    b.HasIndex(new[] { "ScoredPoints" }, "ix_taken_assessment3");

                    b.ToTable("taken_assessment", (string)null);
                });

            modelBuilder.Entity("WebApplicationProject.Models.TargetTrait", b =>
                {
                    b.Property<int>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<int>("Cid")
                        .HasColumnType("int")
                        .HasColumnName("cid");

                    b.Property<string>("Trait")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("trait");

                    b.HasKey("ModuleId", "Cid", "Trait")
                        .HasName("PK__target_t__CE042C4EDCA3AFFF");

                    b.HasIndex(new[] { "ModuleId" }, "ix_target_traits");

                    b.HasIndex(new[] { "Trait" }, "ix_target_traits2");

                    b.HasIndex(new[] { "Cid" }, "ix_target_traits3");

                    b.ToTable("target_traits", (string)null);
                });

            modelBuilder.Entity("WebApplicationProject.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("password");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("role");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("PK__users__3213E83F6F783B7B");

                    b.HasIndex(new[] { "Email" }, "UQ__users__AB6E616420BDA166")
                        .IsUnique();

                    b.HasIndex(new[] { "Username" }, "UQ__users__F3DBC572938D7F34")
                        .IsUnique();

                    b.HasIndex(new[] { "Username" }, "ix_users");

                    b.HasIndex(new[] { "Email" }, "ix_users2");

                    b.HasIndex(new[] { "Role" }, "ix_users3");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("CompletedPrerequisite", b =>
                {
                    b.HasOne("WebApplicationProject.Models.Learner", null)
                        .WithMany()
                        .HasForeignKey("Sid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__completed_p__sid__0F2D40CE");

                    b.HasOne("WebApplicationProject.Models.PrerequisitesCourse", null)
                        .WithMany()
                        .HasForeignKey("Cid", "Prerequisite")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__completed_prereq__10216507");
                });

            modelBuilder.Entity("LearningGoal1", b =>
                {
                    b.HasOne("WebApplicationProject.Models.LearningGoal", null)
                        .WithMany()
                        .HasForeignKey("GoalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__learning___goal___46B27FE2");

                    b.HasOne("WebApplicationProject.Models.Learner", null)
                        .WithMany()
                        .HasForeignKey("Sid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__learning_go__sid__47A6A41B");
                });

            modelBuilder.Entity("Teach", b =>
                {
                    b.HasOne("WebApplicationProject.Models.Course", null)
                        .WithMany()
                        .HasForeignKey("Cid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__teaches__cid__37703C52");

                    b.HasOne("WebApplicationProject.Models.Instructor", null)
                        .WithMany()
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__teaches__instruc__367C1819");
                });

            modelBuilder.Entity("WebApplicationProject.Models.Acheivement", b =>
                {
                    b.HasOne("WebApplicationProject.Models.Badge", "Badge")
                        .WithMany("Acheivements")
                        .HasForeignKey("BadgeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__acheiveme__badge__65370702");

                    b.HasOne("WebApplicationProject.Models.Learner", "SidNavigation")
                        .WithMany("Acheivements")
                        .HasForeignKey("Sid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__acheivement__sid__6442E2C9");

                    b.Navigation("Badge");

                    b.Navigation("SidNavigation");
                });

            modelBuilder.Entity("WebApplicationProject.Models.Admin", b =>
                {
                    b.HasOne("WebApplicationProject.Models.User", "AidNavigation")
                        .WithOne("Admin")
                        .HasForeignKey("WebApplicationProject.Models.Admin", "Aid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__admin__aid__3A81B327");

                    b.Navigation("AidNavigation");
                });

            modelBuilder.Entity("WebApplicationProject.Models.Assessment", b =>
                {
                    b.HasOne("WebApplicationProject.Models.Module", "Module")
                        .WithMany("Assessments")
                        .HasForeignKey("ModuleId", "Cid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__assessment__66603565");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("WebApplicationProject.Models.CollaborativeQuest", b =>
                {
                    b.HasOne("WebApplicationProject.Models.Quest", "Quest")
                        .WithOne("CollaborativeQuest")
                        .HasForeignKey("WebApplicationProject.Models.CollaborativeQuest", "QuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__collabora__quest__74794A92");

                    b.Navigation("Quest");
                });

            modelBuilder.Entity("WebApplicationProject.Models.ContentLibrary", b =>
                {
                    b.HasOne("WebApplicationProject.Models.Module", "Module")
                        .WithMany("ContentLibraries")
                        .HasForeignKey("ModuleId", "Cid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__content_library__619B8048");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("WebApplicationProject.Models.DisscussionForum", b =>
                {
                    b.HasOne("WebApplicationProject.Models.Instructor", null)
                        .WithMany("DisscussionForums")
                        .HasForeignKey("InstructorId");

                    b.HasOne("WebApplicationProject.Models.Module", "Module")
                        .WithMany("DisscussionForums")
                        .HasForeignKey("ModuleId", "Cid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__disscussion_foru__02C769E9");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("WebApplicationProject.Models.EmotionalFeedback", b =>
                {
                    b.HasOne("WebApplicationProject.Models.LearningActivity", "Activity")
                        .WithMany("EmotionalFeedbacks")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__emotional__activ__778AC167");

                    b.HasOne("WebApplicationProject.Models.Learner", "SidNavigation")
                        .WithMany("EmotionalFeedbacks")
                        .HasForeignKey("Sid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__emotional_f__sid__787EE5A0");

                    b.Navigation("Activity");

                    b.Navigation("SidNavigation");
                });

            modelBuilder.Entity("WebApplicationProject.Models.EmotionalFeedbackReview", b =>
                {
                    b.HasOne("WebApplicationProject.Models.EmotionalFeedback", "FeedbackNavigation")
                        .WithMany("EmotionalFeedbackReviews")
                        .HasForeignKey("FeedbackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__emotional__feedb__2CF2ADDF");

                    b.HasOne("WebApplicationProject.Models.Instructor", "Instructor")
                        .WithMany("EmotionalFeedbackReviews")
                        .HasForeignKey("InstructorId")
                        .IsRequired()
                        .HasConstraintName("FK__emotional__instr__2DE6D218");

                    b.Navigation("FeedbackNavigation");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("WebApplicationProject.Models.Enrollment", b =>
                {
                    b.HasOne("WebApplicationProject.Models.Course", "CidNavigation")
                        .WithMany("Enrollments")
                        .HasForeignKey("Cid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__enrollment__cid__339FAB6E");

                    b.HasOne("WebApplicationProject.Models.Learner", "SidNavigation")
                        .WithMany("Enrollments")
                        .HasForeignKey("Sid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__enrollment__sid__32AB8735");

                    b.Navigation("CidNavigation");

                    b.Navigation("SidNavigation");
                });

            modelBuilder.Entity("WebApplicationProject.Models.HealthCondition", b =>
                {
                    b.HasOne("WebApplicationProject.Models.PersonalizationProfile", "PersonalizationProfile")
                        .WithMany("HealthConditions")
                        .HasForeignKey("Sid", "OrderNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__health_condition__4AB81AF0");

                    b.Navigation("PersonalizationProfile");
                });

            modelBuilder.Entity("WebApplicationProject.Models.Instructor", b =>
                {
                    b.HasOne("WebApplicationProject.Models.User", "InstructorNavigation")
                        .WithOne("Instructor")
                        .HasForeignKey("WebApplicationProject.Models.Instructor", "InstructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__instructo__instr__1DB06A4F");

                    b.Navigation("InstructorNavigation");
                });

            modelBuilder.Entity("WebApplicationProject.Models.InstructorDisscussion", b =>
                {
                    b.HasOne("WebApplicationProject.Models.DisscussionForum", "Forum")
                        .WithMany("InstructorDisscussions")
                        .HasForeignKey("ForumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationProject.Models.Instructor", "Instructor")
                        .WithMany("InstructorDisscussions")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Forum");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("WebApplicationProject.Models.InteractionLog", b =>
                {
                    b.HasOne("WebApplicationProject.Models.LearningActivity", "Activity")
                        .WithMany("InteractionLogs")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__interacti__activ__72C60C4A");

                    b.HasOne("WebApplicationProject.Models.Learner", "SidNavigation")
                        .WithMany("InteractionLogs")
                        .HasForeignKey("Sid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__interaction__sid__73BA3083");

                    b.Navigation("Activity");

                    b.Navigation("SidNavigation");
                });

            modelBuilder.Entity("WebApplicationProject.Models.Learner", b =>
                {
                    b.HasOne("WebApplicationProject.Models.User", "SidNavigation")
                        .WithOne("Learner")
                        .HasForeignKey("WebApplicationProject.Models.Learner", "Sid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__learner__sid__3D5E1FD2");

                    b.Navigation("SidNavigation");
                });

            modelBuilder.Entity("WebApplicationProject.Models.LearnerDisscussion", b =>
                {
                    b.HasOne("WebApplicationProject.Models.DisscussionForum", "Forum")
                        .WithMany("LearnerDisscussions")
                        .HasForeignKey("ForumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__learner_d__forum__0697FACD");

                    b.HasOne("WebApplicationProject.Models.Learner", "SidNavigation")
                        .WithMany("LearnerDisscussions")
                        .HasForeignKey("Sid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__learner_dis__sid__078C1F06");

                    b.Navigation("Forum");

                    b.Navigation("SidNavigation");
                });

            modelBuilder.Entity("WebApplicationProject.Models.LearnerMastery", b =>
                {
                    b.HasOne("WebApplicationProject.Models.Quest", "Quest")
                        .WithMany("LearnerMasteries")
                        .HasForeignKey("QuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__learner_m__quest__7E02B4CC");

                    b.HasOne("WebApplicationProject.Models.Learner", "SidNavigation")
                        .WithMany("LearnerMasteries")
                        .HasForeignKey("Sid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__learner_mas__sid__7D0E9093");

                    b.Navigation("Quest");

                    b.Navigation("SidNavigation");
                });

            modelBuilder.Entity("WebApplicationProject.Models.LearnersCollaboration", b =>
                {
                    b.HasOne("WebApplicationProject.Models.Quest", "Quest")
                        .WithMany("LearnersCollaborations")
                        .HasForeignKey("QuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__learners___quest__7849DB76");

                    b.HasOne("WebApplicationProject.Models.Learner", "SidNavigation")
                        .WithMany("LearnersCollaborations")
                        .HasForeignKey("Sid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__learners_co__sid__793DFFAF");

                    b.Navigation("Quest");

                    b.Navigation("SidNavigation");
                });

            modelBuilder.Entity("WebApplicationProject.Models.LearningActivity", b =>
                {
                    b.HasOne("WebApplicationProject.Models.Module", "Module")
                        .WithMany("LearningActivities")
                        .HasForeignKey("ModuleId", "Cid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__learning_activit__6E01572D");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("WebApplicationProject.Models.LearningPath", b =>
                {
                    b.HasOne("WebApplicationProject.Models.PersonalizationProfile", "PersonalizationProfile")
                        .WithMany("LearningPaths")
                        .HasForeignKey("Sid", "OrderNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__learning_path__7C4F7684");

                    b.Navigation("PersonalizationProfile");
                });

            modelBuilder.Entity("WebApplicationProject.Models.LearningPathRule", b =>
                {
                    b.HasOne("WebApplicationProject.Models.LearningPath", "Path")
                        .WithMany("LearningPathRules")
                        .HasForeignKey("PathId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__learning___path___7F2BE32F");

                    b.Navigation("Path");
                });

            modelBuilder.Entity("WebApplicationProject.Models.LearningPreference", b =>
                {
                    b.HasOne("WebApplicationProject.Models.Learner", "SidNavigation")
                        .WithMany("LearningPreferences")
                        .HasForeignKey("Sid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__learning_pr__sid__4316F928");

                    b.Navigation("SidNavigation");
                });

            modelBuilder.Entity("WebApplicationProject.Models.Module", b =>
                {
                    b.HasOne("WebApplicationProject.Models.Course", "CidNavigation")
                        .WithMany("Modules")
                        .HasForeignKey("Cid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__modules__cid__5535A963");

                    b.Navigation("CidNavigation");
                });

            modelBuilder.Entity("WebApplicationProject.Models.ModuleContent", b =>
                {
                    b.HasOne("WebApplicationProject.Models.Module", "Module")
                        .WithMany("ModuleContents")
                        .HasForeignKey("ModuleId", "Cid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__module_content__5812160E");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("WebApplicationProject.Models.PathReview", b =>
                {
                    b.HasOne("WebApplicationProject.Models.Instructor", "Instructor")
                        .WithMany("PathReviews")
                        .HasForeignKey("InstructorId")
                        .IsRequired()
                        .HasConstraintName("FK__path_revi__instr__245D67DE");

                    b.HasOne("WebApplicationProject.Models.LearningPath", "Path")
                        .WithMany("PathReviews")
                        .HasForeignKey("PathId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__path_revi__path___25518C17");

                    b.Navigation("Instructor");

                    b.Navigation("Path");
                });

            modelBuilder.Entity("WebApplicationProject.Models.PersonalizationProfile", b =>
                {
                    b.HasOne("WebApplicationProject.Models.Learner", "SidNavigation")
                        .WithMany("PersonalizationProfiles")
                        .HasForeignKey("Sid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__personaliza__sid__47DBAE45");

                    b.Navigation("SidNavigation");
                });

            modelBuilder.Entity("WebApplicationProject.Models.PrerequisitesCourse", b =>
                {
                    b.HasOne("WebApplicationProject.Models.Course", "CidNavigation")
                        .WithMany("PrerequisitesCourses")
                        .HasForeignKey("Cid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__prerequisit__cid__5070F446");

                    b.Navigation("CidNavigation");
                });

            modelBuilder.Entity("WebApplicationProject.Models.QuestReward", b =>
                {
                    b.HasOne("WebApplicationProject.Models.Quest", "Quest")
                        .WithMany("QuestRewards")
                        .HasForeignKey("QuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__quest_rew__quest__0B5CAFEA");

                    b.HasOne("WebApplicationProject.Models.Reward", "Reward")
                        .WithMany("QuestRewards")
                        .HasForeignKey("RewardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__quest_rew__rewar__0A688BB1");

                    b.HasOne("WebApplicationProject.Models.Learner", "SidNavigation")
                        .WithMany("QuestRewards")
                        .HasForeignKey("Sid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__quest_rewar__sid__0C50D423");

                    b.Navigation("Quest");

                    b.Navigation("Reward");

                    b.Navigation("SidNavigation");
                });

            modelBuilder.Entity("WebApplicationProject.Models.Ranking", b =>
                {
                    b.HasOne("WebApplicationProject.Models.LeaderBoard", "Board")
                        .WithMany("Rankings")
                        .HasForeignKey("BoardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ranking__board_i__3D2915A8");

                    b.HasOne("WebApplicationProject.Models.Course", "CidNavigation")
                        .WithMany("Rankings")
                        .HasForeignKey("Cid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ranking__cid__3F115E1A");

                    b.HasOne("WebApplicationProject.Models.Learner", "SidNavigation")
                        .WithMany("Rankings")
                        .HasForeignKey("Sid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ranking__sid__3E1D39E1");

                    b.Navigation("Board");

                    b.Navigation("CidNavigation");

                    b.Navigation("SidNavigation");
                });

            modelBuilder.Entity("WebApplicationProject.Models.RecivedNotification", b =>
                {
                    b.HasOne("WebApplicationProject.Models.Notification", "Notification")
                        .WithMany("RecivedNotifications")
                        .HasForeignKey("NotificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__recived_n__notif__56E8E7AB");

                    b.HasOne("WebApplicationProject.Models.Learner", "SidNavigation")
                        .WithMany("RecivedNotifications")
                        .HasForeignKey("Sid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__recived_not__sid__57DD0BE4");

                    b.Navigation("Notification");

                    b.Navigation("SidNavigation");
                });

            modelBuilder.Entity("WebApplicationProject.Models.Skill", b =>
                {
                    b.HasOne("WebApplicationProject.Models.Learner", "SidNavigation")
                        .WithMany("Skills")
                        .HasForeignKey("Sid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__skills__sid__403A8C7D");

                    b.Navigation("SidNavigation");
                });

            modelBuilder.Entity("WebApplicationProject.Models.SkillMasteryQuest", b =>
                {
                    b.HasOne("WebApplicationProject.Models.Quest", "Quest")
                        .WithMany("SkillMasteryQuests")
                        .HasForeignKey("QuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__skill_mas__quest__70A8B9AE");

                    b.Navigation("Quest");
                });

            modelBuilder.Entity("WebApplicationProject.Models.SkillProgression", b =>
                {
                    b.HasOne("WebApplicationProject.Models.Skill", "Skill")
                        .WithMany("SkillProgressions")
                        .HasForeignKey("Sid", "SkillName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__skill_progressio__5F7E2DAC");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("WebApplicationProject.Models.SurveyQuestion", b =>
                {
                    b.HasOne("WebApplicationProject.Models.Survey", "Survey")
                        .WithMany("SurveyQuestions")
                        .HasForeignKey("SurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__survey_qu__surve__4C6B5938");

                    b.Navigation("Survey");
                });

            modelBuilder.Entity("WebApplicationProject.Models.SurveyResponse", b =>
                {
                    b.HasOne("WebApplicationProject.Models.Learner", "SidNavigation")
                        .WithMany("SurveyResponses")
                        .HasForeignKey("Sid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__survey_resp__sid__503BEA1C");

                    b.HasOne("WebApplicationProject.Models.SurveyQuestion", "SurveyQuestion")
                        .WithMany("SurveyResponses")
                        .HasForeignKey("SurveyId", "Question")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__survey_responses__4F47C5E3");

                    b.Navigation("SidNavigation");

                    b.Navigation("SurveyQuestion");
                });

            modelBuilder.Entity("WebApplicationProject.Models.TakenAssessment", b =>
                {
                    b.HasOne("WebApplicationProject.Models.Assessment", "Assessment")
                        .WithMany("TakenAssessments")
                        .HasForeignKey("AssessmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__taken_ass__asses__693CA210");

                    b.HasOne("WebApplicationProject.Models.Learner", "SidNavigation")
                        .WithMany("TakenAssessments")
                        .HasForeignKey("Sid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__taken_asses__sid__6A30C649");

                    b.Navigation("Assessment");

                    b.Navigation("SidNavigation");
                });

            modelBuilder.Entity("WebApplicationProject.Models.TargetTrait", b =>
                {
                    b.HasOne("WebApplicationProject.Models.Module", "Module")
                        .WithMany("TargetTraits")
                        .HasForeignKey("ModuleId", "Cid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__target_traits__5AEE82B9");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("WebApplicationProject.Models.Assessment", b =>
                {
                    b.Navigation("TakenAssessments");
                });

            modelBuilder.Entity("WebApplicationProject.Models.Badge", b =>
                {
                    b.Navigation("Acheivements");
                });

            modelBuilder.Entity("WebApplicationProject.Models.Course", b =>
                {
                    b.Navigation("Enrollments");

                    b.Navigation("Modules");

                    b.Navigation("PrerequisitesCourses");

                    b.Navigation("Rankings");
                });

            modelBuilder.Entity("WebApplicationProject.Models.DisscussionForum", b =>
                {
                    b.Navigation("InstructorDisscussions");

                    b.Navigation("LearnerDisscussions");
                });

            modelBuilder.Entity("WebApplicationProject.Models.EmotionalFeedback", b =>
                {
                    b.Navigation("EmotionalFeedbackReviews");
                });

            modelBuilder.Entity("WebApplicationProject.Models.Instructor", b =>
                {
                    b.Navigation("DisscussionForums");

                    b.Navigation("EmotionalFeedbackReviews");

                    b.Navigation("InstructorDisscussions");

                    b.Navigation("PathReviews");
                });

            modelBuilder.Entity("WebApplicationProject.Models.LeaderBoard", b =>
                {
                    b.Navigation("Rankings");
                });

            modelBuilder.Entity("WebApplicationProject.Models.Learner", b =>
                {
                    b.Navigation("Acheivements");

                    b.Navigation("EmotionalFeedbacks");

                    b.Navigation("Enrollments");

                    b.Navigation("InteractionLogs");

                    b.Navigation("LearnerDisscussions");

                    b.Navigation("LearnerMasteries");

                    b.Navigation("LearnersCollaborations");

                    b.Navigation("LearningPreferences");

                    b.Navigation("PersonalizationProfiles");

                    b.Navigation("QuestRewards");

                    b.Navigation("Rankings");

                    b.Navigation("RecivedNotifications");

                    b.Navigation("Skills");

                    b.Navigation("SurveyResponses");

                    b.Navigation("TakenAssessments");
                });

            modelBuilder.Entity("WebApplicationProject.Models.LearningActivity", b =>
                {
                    b.Navigation("EmotionalFeedbacks");

                    b.Navigation("InteractionLogs");
                });

            modelBuilder.Entity("WebApplicationProject.Models.LearningPath", b =>
                {
                    b.Navigation("LearningPathRules");

                    b.Navigation("PathReviews");
                });

            modelBuilder.Entity("WebApplicationProject.Models.Module", b =>
                {
                    b.Navigation("Assessments");

                    b.Navigation("ContentLibraries");

                    b.Navigation("DisscussionForums");

                    b.Navigation("LearningActivities");

                    b.Navigation("ModuleContents");

                    b.Navigation("TargetTraits");
                });

            modelBuilder.Entity("WebApplicationProject.Models.Notification", b =>
                {
                    b.Navigation("RecivedNotifications");
                });

            modelBuilder.Entity("WebApplicationProject.Models.PersonalizationProfile", b =>
                {
                    b.Navigation("HealthConditions");

                    b.Navigation("LearningPaths");
                });

            modelBuilder.Entity("WebApplicationProject.Models.Quest", b =>
                {
                    b.Navigation("CollaborativeQuest");

                    b.Navigation("LearnerMasteries");

                    b.Navigation("LearnersCollaborations");

                    b.Navigation("QuestRewards");

                    b.Navigation("SkillMasteryQuests");
                });

            modelBuilder.Entity("WebApplicationProject.Models.Reward", b =>
                {
                    b.Navigation("QuestRewards");
                });

            modelBuilder.Entity("WebApplicationProject.Models.Skill", b =>
                {
                    b.Navigation("SkillProgressions");
                });

            modelBuilder.Entity("WebApplicationProject.Models.Survey", b =>
                {
                    b.Navigation("SurveyQuestions");
                });

            modelBuilder.Entity("WebApplicationProject.Models.SurveyQuestion", b =>
                {
                    b.Navigation("SurveyResponses");
                });

            modelBuilder.Entity("WebApplicationProject.Models.User", b =>
                {
                    b.Navigation("Admin");

                    b.Navigation("Instructor");

                    b.Navigation("Learner");
                });
#pragma warning restore 612, 618
        }
    }
}
